*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  //This defines what 1rem is
  font-size: 62.5%;

  @include respond(tab-land) {
    // width < 1200?
    font-size: 56.25%; //1rem = 9px; 9/16 = 56.25%
  }

  @include respond(tab-port) {
    // width < 900?
    font-size: 50%; //1rem = 8px; 8/16 = 50%
  }

  @include respond(big-desktop) {
    font-size: 75%; //1rem = 12; 12/16 = 75%
  }
}
body {
  box-sizing: border-box;
  font-family: "Space Grotesk", sans-serif !important;
  background-color: $color-grey-dark;
}

.container {
  background-color: $color-black;
  overflow: hidden;
  position: relative;
  display: grid;
  grid-template-rows: repeat(8, min-content);
  grid-template-columns:
    [full-start] minmax(20rem, 1fr) [center-start] repeat(6, [col-start] minmax(min-content, 23rem) [col-end])
    [center-end] minmax(20rem, 1fr) [full-end];

  @include respond(tab-land) {
    grid-template-columns:
      [full-start] minmax(2rem, 1fr) [center-start] repeat(6, [col-start] minmax(min-content, 23rem) [col-end])
      [center-end] minmax(2rem, 1fr) [full-end];
  }

  
  &::after{
    content: "";
    width: 29.5%;
    height: 20rem;
    background-image: url('../../assets/background-1.png');
    background-size: 100%;
    background-repeat: no-repeat;
    position: absolute;
    top: 3.7%;
    left: 0;

    @include respond(tab-land){
      width: 60%;
      left: -30%;
      top: 2.2%;
    }

    @include respond(phone){
      width: 90%;
      left: -40%;
      top: 3%;
    }
  }

  &::before {
    content: "";
    width: 29.5%;
    height: 20rem;
    background-image: url("../../assets/background-1.png");
    background-size: 100%;
    background-repeat: no-repeat;
    position: absolute;
    top: 27.3%;
    right: -10%;
    transform: rotateY(180deg);

    @include respond(tab-land){
      width: 60%;
      right: -30%;
      top: 27.8%;
    }

    @include respond(phone){
      width: 90%;
      right: -45%;
      top: 26.5%;
    }
  }
}

a {
  text-decoration: none;
  color: inherit;
}
